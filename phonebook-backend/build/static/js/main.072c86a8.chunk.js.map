{"version":3,"sources":["components/Notification.js","components/Phonebook.js","services/persons.js","App.js","index.js"],"names":["Notification","message","className","Person","id","name","number","deletePerson","onClick","Persons","persons","map","person","PersonForm","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","value","onChange","type","Filter","term","handler","Phonebook","props","notificationMessage","searchTerm","handleSearchChange","addPerson","personsToShow","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","setSearchTerm","setNotificationMessage","useEffect","personService","initialPersons","modifyPerson","personToChange","window","confirm","changedPerson","returnedPerson","setTimeout","filter","toLowerCase","includes","event","target","preventDefault","some","find","personObject","concat","catch","error","console","log","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.072c86a8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"notification\">\n        {message}\n      </div>\n    )\n}\n\nexport default Notification","import React from 'react'\nimport Notification from './Notification'\n\nconst Person = ({id, name, number, deletePerson}) => {\n    return(\n        <div>\n            <li key={id}>\n                {name} {number} <button onClick={deletePerson}>delete</button>\n            </li>\n        </div>\n    )\n}\n\nconst Persons = ({persons, deletePerson}) => {\n    return (\n        <div>\n            <ul>\n            {persons.map((person) =>\n                <Person \n                    key={person.id} \n                    name={person.name} \n                    number={person.number} \n                    deletePerson={() => deletePerson(person.name, person.id)} \n                />\n            )}\n            </ul>\n        </div>\n    )\n}\n\nconst PersonForm = ({onSubmit, newName, handleNameChange, newNumber, handleNumberChange}) => {\n    return (\n        <form onSubmit={onSubmit}>\n            <div>name: <input value={newName} onChange={handleNameChange} /></div>\n            <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n            <div><button type=\"submit\">add</button></div>\n        </form>\n    )\n}\n\nconst Filter = ({term, handler}) => {\n    return (\n        <form>\n            <div>filter names with: <input value={term} onChange={handler}></input></div>\n        </form>\n    )\n}\n\nconst Phonebook = (props) => {\n    return (\n        <div>\n            <h2>Phonebook</h2>\n                <Notification\n                    message={props.notificationMessage}\n                />\n                <Filter \n                    term={props.searchTerm} \n                    handler={props.handleSearchChange} \n                />\n            <h2>Add new contact:</h2>\n                <PersonForm \n                    onSubmit={props.addPerson} \n                    newName={props.newName} \n                    handleNameChange={props.handleNameChange}\n                    newNumber={props.newNumber}\n                    handleNumberChange={props.handleNumberChange}     \n                />\n            <h2>Numbers</h2>\n                <Persons \n                    persons={props.personsToShow} \n                    deletePerson={props.deletePerson} \n                />\n        </div>\n    )\n}\n\nexport default Phonebook","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deletePerson }","import React, { useState, useEffect } from 'react'\nimport Phonebook from './components/Phonebook'\nimport personService from './services/persons'\n\nconst App = () => {\n    const [ persons, setPersons ] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber] = useState('')\n    const [ searchTerm, setSearchTerm ] = useState('')\n    const [ notificationMessage, setNotificationMessage ] = useState(null)\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            })\n    }, [])\n\n    const addPerson = (event) => {\n        event.preventDefault()\n\n        if (persons.some(person => person.name == newName)) {\n            modifyPerson(persons.find(person => person.name == newName))\n        } else {\n            const personObject = {\n                name: newName,\n                number: newNumber\n            }\n\n            personService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(personObject))\n                    setNewName('')\n                    setNewNumber('')\n\n                    setNotificationMessage(`Phone number for ${personObject.name} added`)\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                    }, 5000)\n                })\n                .catch(error => {\n                    setNotificationMessage(error.response.data.error)\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                    }, 5000)\n\n                    console.log(error.response.data.error)\n                })\n        }\n    }\n\n    const modifyPerson = (personToChange) => {\n        if (window.confirm(`${personToChange.name} is already in the phonebook, replace the old number with a new one?`)) {\n            const changedPerson = {...personToChange, number: newNumber}\n\n            personService\n                .update(personToChange.id, changedPerson)\n                .then(returnedPerson => {\n                    setPersons(persons.map(person => person.id != personToChange.id ? person : changedPerson))\n                    setNewName('')\n                    setNewNumber('')\n\n                    setNotificationMessage(`Phone number for ${changedPerson.name} changed`)\n                    setTimeout(() => {\n                        setNotificationMessage(null)\n                    }, 5000)\n                })\n        }\n    }\n\n    const deletePerson = (name, id) => {\n\n        if (window.confirm(`Are you sure you want to delete ${name}?`)) {\n            personService\n                .deletePerson(id)\n                .then(deletedPerson => {\n                    setPersons(persons.filter(person => person.id != id))\n                })\n        }\n        \n    }\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const handleSearchChange = (event) => {\n        setSearchTerm(event.target.value)\n    }\n\n    const personsToShow = searchTerm == ''\n        ? persons\n        : persons.filter(person => person.name.toLowerCase().includes(searchTerm.toLowerCase()))\n\n    return (\n        <div>\n            <Phonebook\n                notificationMessage={notificationMessage}\n                searchTerm={searchTerm}\n                handleSearchChange={handleSearchChange}\n                addPerson={addPerson}\n                newName={newName}\n                handleNameChange={handleNameChange}\n                newNumber={newNumber}\n                handleNumberChange={handleNumberChange}\n                personsToShow={personsToShow}\n                deletePerson={deletePerson}\n            />\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}